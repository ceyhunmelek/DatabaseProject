{"ast":null,"code":"var _jsxFileName = \"/home/cmelek/Projects/React/dbgui/src/Main.js\";\nimport React, { Component } from 'react';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      joke: {},\n      jokes: []\n    };\n\n    this.fetchJokes = () => {\n      fetch('https://official-joke-api.appspot.com/jokes/ten').then(response => response.json()).then(json => this.setState({\n        jokes: json\n      })).catch(error => alert(error.message));\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://official-joke-api.appspot.com/jokes/random').then(response => response.json()).then(json => this.setState({\n      joke: json\n    })).catch(error => alert(error.message));\n  }\n\n  render() {\n    const _this$state$joke = this.state.joke,\n          setup = _this$state$joke.setup,\n          punchline = _this$state$joke.punchline;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Random Joke\"), React.createElement(Joke, {\n      joke: this.state.joke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Want ten new jokes?\"), React.createElement(\"button\", {\n      onClick: this.fetchJokes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Click Me\"), this.state.jokes.map(joke => React.createElement(Joke, {\n      key: joke.id,\n      joke: joke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Jokes;","map":{"version":3,"sources":["/home/cmelek/Projects/React/dbgui/src/Main.js"],"names":["React","Component","Main","state","joke","jokes","fetchJokes","fetch","then","response","json","setState","catch","error","alert","message","componentDidMount","render","setup","punchline","map","id","Jokes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AAACC,MAAAA,IAAI,EAAG,EAAR;AAAYC,MAAAA,KAAK,EAAC;AAAlB,KADkB;;AAAA,SAS1BC,UAT0B,GASb,MAAM;AACfC,MAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAACK;AAAP,OAAd,CAFd,EAGCE,KAHD,CAGQC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAP,CAHtB;AAIH,KAdyB;AAAA;;AAE1BC,EAAAA,iBAAiB,GAAE;AACfT,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACP,MAAAA,IAAI,EAACM;AAAN,KAAd,CAFd,EAGCE,KAHD,CAGQC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAP,CAHtB;AAIH;;AASDE,EAAAA,MAAM,GAAE;AAAA,6BACsB,KAAKd,KAAL,CAAWC,IADjC;AAAA,UACGc,KADH,oBACGA,KADH;AAAA,UACSC,SADT,oBACSA,SADT;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,KAAKE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMK,KAAKH,KAAL,CAAWE,KAAX,CAAiBe,GAAjB,CAAqBhB,IAAI,IAAG,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACiB,EAAhB;AAAoB,MAAA,IAAI,EAAEjB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CANL,CADJ;AAUH;;AA5ByB;;AA+B5B,eAAekB,KAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Main extends Component{\n  state = {joke : {}, jokes:[] };\n  componentDidMount(){\n      fetch('https://official-joke-api.appspot.com/jokes/random')\n      .then(response => response.json())\n      .then(json => this.setState({joke:json}))\n      .catch( error => alert(error.message));\n  }\n\n  fetchJokes = () => {\n      fetch('https://official-joke-api.appspot.com/jokes/ten')\n      .then(response => response.json())\n      .then(json => this.setState({jokes:json}))\n      .catch( error => alert(error.message));\n  }\n\n  render(){\n      const {setup,punchline} = this.state.joke;\n      return(\n          <div>\n              <h2>Random Joke</h2>\n              <Joke joke={this.state.joke}/>\n              <hr/>\n              <h3>Want ten new jokes?</h3>\n              <button onClick={this.fetchJokes}>Click Me</button>\n              {this.state.jokes.map(joke=>(<Joke key={joke.id} joke={joke}/>))}\n          </div>\n      )\n  }\n}\n\nexport default Jokes;"]},"metadata":{},"sourceType":"module"}