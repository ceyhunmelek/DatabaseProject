{"ast":null,"code":"var _jsxFileName = \"/home/cmelek/Projects/React/dbgui/src/Map.js\";\nimport React, { Component } from 'react';\nimport { Map as LeafletMap, TileLayer, CircleMarker } from 'react-leaflet';\nconst position = [-15.89929, -47.49445];\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allDatas: [],\n      greatest: 0\n    };\n  }\n\n  componentDidUpdate() {\n    console.log('http://104.248.25.93:9000/average/' + this.props.observation.yr + '/' + this.props.observation.mo + '/' + this.props.observation.type);\n    fetch('http://104.248.25.93:9000/average/' + this.props.observation.yr + '/' + this.props.observation.mo + '/' + this.props.observation.type).then(response => response.json()).then(json => this.setState({\n      allDatas: json.data\n    })).catch(error => alert(error.message));\n  }\n\n  scale(data, current) {\n    var big = data[1];\n    var small = data[data.length - 1];\n    var difference = big - small;\n    return (current - small) / difference * 75 + 25;\n  }\n\n  render() {\n    return React.createElement(LeafletMap, {\n      style: {\n        height: '100%'\n      },\n      center: position,\n      zoom: 6,\n      maxZoom: 10,\n      attributionControl: true,\n      zoomControl: true,\n      doubleClickZoom: true,\n      scrollWheelZoom: true,\n      dragging: true,\n      animate: true,\n      easeLinearity: 0.35,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: \"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), this.state.allDatas.map(sdata => React.createElement(CircleMarker, {\n      key: sdata.wsid,\n      radius: scale(this.state.allDatas.data, sdata.average),\n      center: [sdata.lat, sdata.lon],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/cmelek/Projects/React/dbgui/src/Map.js"],"names":["React","Component","Map","LeafletMap","TileLayer","CircleMarker","position","state","allDatas","greatest","componentDidUpdate","console","log","props","observation","yr","mo","type","fetch","then","response","json","setState","data","catch","error","alert","message","scale","current","big","small","length","difference","render","height","map","sdata","wsid","average","lat","lon"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,SAA5B,EAAuCC,YAAvC,QAA0D,eAA1D;AAEA,MAAMC,QAAQ,GAAG,CAAC,CAAC,QAAF,EAAY,CAAC,QAAb,CAAjB;;AACA,MAAMJ,GAAN,SAAkBD,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACzBM,KADyB,GACjB;AAACC,MAAAA,QAAQ,EAAG,EAAZ;AAAeC,MAAAA,QAAQ,EAAG;AAA1B,KADiB;AAAA;;AAEzBC,EAAAA,kBAAkB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAqC,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,EAA5D,GAA+D,GAA/D,GAAmE,KAAKF,KAAL,CAAWC,WAAX,CAAuBE,EAA1F,GAA6F,GAA7F,GAAiG,KAAKH,KAAL,CAAWC,WAAX,CAAuBG,IAApI;AACAC,IAAAA,KAAK,CAAC,uCAAqC,KAAKL,KAAL,CAAWC,WAAX,CAAuBC,EAA5D,GAA+D,GAA/D,GAAmE,KAAKF,KAAL,CAAWC,WAAX,CAAuBE,EAA1F,GAA6F,GAA7F,GAAiG,KAAKH,KAAL,CAAWC,WAAX,CAAuBG,IAAzH,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACd,MAAAA,QAAQ,EAACa,IAAI,CAACE;AAAf,KAAd,CAFd,EAGCC,KAHD,CAGQC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAP,CAHtB;AAID;;AACDC,EAAAA,KAAK,CAACL,IAAD,EAAMM,OAAN,EAAc;AACjB,QAAIC,GAAG,GAAGP,IAAI,CAAC,CAAD,CAAd;AACA,QAAIQ,KAAK,GAAGR,IAAI,CAACA,IAAI,CAACS,MAAL,GAAc,CAAf,CAAhB;AACA,QAAIC,UAAU,GAAGH,GAAG,GAAGC,KAAvB;AACA,WAAS,CAACF,OAAO,GAAGE,KAAX,IAAqBE,UAArB,GAAmC,EAApC,GAA0C,EAAlD;AAED;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAnB;AACA,MAAA,MAAM,EAAE7B,QADR;AAEA,MAAA,IAAI,EAAE,CAFN;AAGA,MAAA,OAAO,EAAE,EAHT;AAIA,MAAA,kBAAkB,EAAE,IAJpB;AAKA,MAAA,WAAW,EAAE,IALb;AAMA,MAAA,eAAe,EAAE,IANjB;AAOA,MAAA,eAAe,EAAE,IAPjB;AAQA,MAAA,QAAQ,EAAE,IARV;AASA,MAAA,OAAO,EAAE,IATT;AAUA,MAAA,aAAa,EAAE,IAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYA,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,EAeC,KAAKC,KAAL,CAAWC,QAAX,CAAoB4B,GAApB,CAAwBC,KAAK,IAAG,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAK,CAACC,IAAzB;AACjC,MAAA,MAAM,EAAEV,KAAK,CAAC,KAAKrB,KAAL,CAAWC,QAAX,CAAoBe,IAArB,EAA0Bc,KAAK,CAACE,OAAhC,CADoB;AAEjC,MAAA,MAAM,EAAE,CAACF,KAAK,CAACG,GAAP,EAAWH,KAAK,CAACI,GAAjB,CAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,CAfD,CADF;AAuBH;;AAzCwB;;AA2C3B,eAAevC,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport { Map as LeafletMap, TileLayer, CircleMarker} from 'react-leaflet';\n\nconst position = [-15.89929, -47.49445]\nclass Map extends Component{\n  state = {allDatas : [],greatest : 0}\n  componentDidUpdate(){\n    console.log('http://104.248.25.93:9000/average/'+this.props.observation.yr+'/'+this.props.observation.mo+'/'+this.props.observation.type)\n    fetch('http://104.248.25.93:9000/average/'+this.props.observation.yr+'/'+this.props.observation.mo+'/'+this.props.observation.type)\n    .then(response => response.json())\n    .then(json => this.setState({allDatas:json.data}))\n    .catch( error => alert(error.message));\n  }\n  scale(data,current){\n    var big = data[1];\n    var small = data[data.length - 1];\n    var difference = big - small;\n    return (((current - small) / (difference) * 75) + 25)\n\n  }\n\n  render(){\n      return(\n        <LeafletMap style={{height:'100%'}}\n        center={position}\n        zoom={6}\n        maxZoom={10}\n        attributionControl={true}\n        zoomControl={true}\n        doubleClickZoom={true}\n        scrollWheelZoom={true}\n        dragging={true}\n        animate={true}\n        easeLinearity={0.35}\n      >\n        <TileLayer url='https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'/>\n\n\n        {this.state.allDatas.map(sdata=>(<CircleMarker key={sdata.wsid} \n        radius={scale(this.state.allDatas.data,sdata.average)} \n        center={[sdata.lat,sdata.lon]}/>\n        ))}\n\n      </LeafletMap>\n      )\n  }\n}\nexport default Map"]},"metadata":{},"sourceType":"module"}